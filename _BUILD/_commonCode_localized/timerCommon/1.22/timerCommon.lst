GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 1


   1               		.file	"timerCommon.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.stabs	"/Users/meh/_avrProjects/LCDdirectLVDS/67-pwm161/",100,0,2,.Ltext0
   8               		.stabs	"_commonCode_localized/timerCommon/1.22/timerCommon.c",100,0,2,.Ltext0
   9               		.text
  10               	.Ltext0:
  11               		.stabs	"gcc2_compiled.",60,0,0,0
  12               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,0,0
  13               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,0,0
  14               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,0,0
  15               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,0,0
  16               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,0,0
  17               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,0,
  18               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,0,0
  19               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,0,0
  20               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,0,0
  21               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,0,0
  22               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,0,0
  23               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,0,0
  24               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,0,0
  25               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,0,0
  26               		.stabs	"short _Fract:t(0,15)=r(0,1);1;0;",128,0,0,0
  27               		.stabs	"_Fract:t(0,16)=r(0,1);2;0;",128,0,0,0
  28               		.stabs	"long _Fract:t(0,17)=r(0,1);4;0;",128,0,0,0
  29               		.stabs	"long long _Fract:t(0,18)=r(0,1);8;0;",128,0,0,0
  30               		.stabs	"unsigned short _Fract:t(0,19)=r(0,1);1;0;",128,0,0,0
  31               		.stabs	"unsigned _Fract:t(0,20)=r(0,1);2;0;",128,0,0,0
  32               		.stabs	"unsigned long _Fract:t(0,21)=r(0,1);4;0;",128,0,0,0
  33               		.stabs	"unsigned long long _Fract:t(0,22)=r(0,1);8;0;",128,0,0,0
  34               		.stabs	"_Sat short _Fract:t(0,23)=r(0,1);1;0;",128,0,0,0
  35               		.stabs	"_Sat _Fract:t(0,24)=r(0,1);2;0;",128,0,0,0
  36               		.stabs	"_Sat long _Fract:t(0,25)=r(0,1);4;0;",128,0,0,0
  37               		.stabs	"_Sat long long _Fract:t(0,26)=r(0,1);8;0;",128,0,0,0
  38               		.stabs	"_Sat unsigned short _Fract:t(0,27)=r(0,1);1;0;",128,0,0,0
  39               		.stabs	"_Sat unsigned _Fract:t(0,28)=r(0,1);2;0;",128,0,0,0
  40               		.stabs	"_Sat unsigned long _Fract:t(0,29)=r(0,1);4;0;",128,0,0,0
  41               		.stabs	"_Sat unsigned long long _Fract:t(0,30)=r(0,1);8;0;",128,0,0,0
  42               		.stabs	"short _Accum:t(0,31)=r(0,1);2;0;",128,0,0,0
  43               		.stabs	"_Accum:t(0,32)=r(0,1);4;0;",128,0,0,0
  44               		.stabs	"long _Accum:t(0,33)=r(0,1);8;0;",128,0,0,0
  45               		.stabs	"long long _Accum:t(0,34)=r(0,1);8;0;",128,0,0,0
  46               		.stabs	"unsigned short _Accum:t(0,35)=r(0,1);2;0;",128,0,0,0
  47               		.stabs	"unsigned _Accum:t(0,36)=r(0,1);4;0;",128,0,0,0
  48               		.stabs	"unsigned long _Accum:t(0,37)=r(0,1);8;0;",128,0,0,0
  49               		.stabs	"unsigned long long _Accum:t(0,38)=r(0,1);8;0;",128,0,0,0
  50               		.stabs	"_Sat short _Accum:t(0,39)=r(0,1);2;0;",128,0,0,0
  51               		.stabs	"_Sat _Accum:t(0,40)=r(0,1);4;0;",128,0,0,0
  52               		.stabs	"_Sat long _Accum:t(0,41)=r(0,1);8;0;",128,0,0,0
  53               		.stabs	"_Sat long long _Accum:t(0,42)=r(0,1);8;0;",128,0,0,0
  54               		.stabs	"_Sat unsigned short _Accum:t(0,43)=r(0,1);2;0;",128,0,0,0
  55               		.stabs	"_Sat unsigned _Accum:t(0,44)=r(0,1);4;0;",128,0,0,0
  56               		.stabs	"_Sat unsigned long _Accum:t(0,45)=r(0,1);8;0;",128,0,0,0
  57               		.stabs	"_Sat unsigned long long _Accum:t(0,46)=r(0,1);8;0;",128,0,0,0
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 2


  58               		.stabs	"void:t(0,47)=(0,47)",128,0,0,0
  59               		.stabs	"_commonCode_localized/timerCommon/1.22/timerCommon.h",130,0,0,0
  60               		.stabs	"/opt/local/avr/include/avr/interrupt.h",130,0,0,0
  61               		.stabs	"/opt/local/avr/include/avr/io.h",130,0,0,0
  62               		.stabs	"/opt/local/avr/include/avr/sfr_defs.h",130,0,0,0
  63               		.stabs	"/opt/local/avr/include/inttypes.h",130,0,0,0
  64               		.stabs	"/opt/local/lib/gcc/avr/4.8.2/include/stdint.h",130,0,0,0
  65               		.stabs	"/opt/local/avr/include/stdint.h",130,0,0,0
  66               		.stabs	"int8_t:t(7,1)=(0,10)",128,0,121,0
  67               		.stabs	"uint8_t:t(7,2)=(0,11)",128,0,122,0
  68               		.stabs	"int16_t:t(7,3)=(0,1)",128,0,123,0
  69               		.stabs	"uint16_t:t(7,4)=(0,4)",128,0,124,0
  70               		.stabs	"int32_t:t(7,5)=(0,3)",128,0,125,0
  71               		.stabs	"uint32_t:t(7,6)=(0,5)",128,0,126,0
  72               		.stabs	"int64_t:t(7,7)=(0,6)",128,0,128,0
  73               		.stabs	"uint64_t:t(7,8)=(0,7)",128,0,129,0
  74               		.stabs	"intptr_t:t(7,9)=(7,3)",128,0,142,0
  75               		.stabs	"uintptr_t:t(7,10)=(7,4)",128,0,147,0
  76               		.stabs	"int_least8_t:t(7,11)=(7,1)",128,0,159,0
  77               		.stabs	"uint_least8_t:t(7,12)=(7,2)",128,0,164,0
  78               		.stabs	"int_least16_t:t(7,13)=(7,3)",128,0,169,0
  79               		.stabs	"uint_least16_t:t(7,14)=(7,4)",128,0,174,0
  80               		.stabs	"int_least32_t:t(7,15)=(7,5)",128,0,179,0
  81               		.stabs	"uint_least32_t:t(7,16)=(7,6)",128,0,184,0
  82               		.stabs	"int_least64_t:t(7,17)=(7,7)",128,0,192,0
  83               		.stabs	"uint_least64_t:t(7,18)=(7,8)",128,0,199,0
  84               		.stabs	"int_fast8_t:t(7,19)=(7,1)",128,0,213,0
  85               		.stabs	"uint_fast8_t:t(7,20)=(7,2)",128,0,218,0
  86               		.stabs	"int_fast16_t:t(7,21)=(7,3)",128,0,223,0
  87               		.stabs	"uint_fast16_t:t(7,22)=(7,4)",128,0,228,0
  88               		.stabs	"int_fast32_t:t(7,23)=(7,5)",128,0,233,0
  89               		.stabs	"uint_fast32_t:t(7,24)=(7,6)",128,0,238,0
  90               		.stabs	"int_fast64_t:t(7,25)=(7,7)",128,0,246,0
  91               		.stabs	"uint_fast64_t:t(7,26)=(7,8)",128,0,253,0
  92               		.stabs	"intmax_t:t(7,27)=(7,7)",128,0,273,0
  93               		.stabs	"uintmax_t:t(7,28)=(7,8)",128,0,278,0
  94               		.stabn	162,0,0,0
  95               		.stabn	162,0,0,0
  96               		.stabs	"int_farptr_t:t(5,1)=(7,5)",128,0,77,0
  97               		.stabs	"uint_farptr_t:t(5,2)=(7,6)",128,0,81,0
  98               		.stabn	162,0,0,0
  99               		.stabn	162,0,0,0
 100               		.stabs	"/opt/local/avr/include/avr/fuse.h",130,0,0,0
 101               		.stabs	"__fuse_t:t(8,1)=(8,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,244,0
 102               		.stabn	162,0,0,0
 103               		.stabn	162,0,0,0
 104               		.stabn	162,0,0,0
 105               		.stabn	162,0,0,0
 106               		.stabs	"timer_selectDivisor:F(7,2)",36,0,216,timer_selectDivisor
 107               		.stabs	"timerNum:P(7,2)",64,0,216,24
 108               		.stabs	"clockDiv:P(7,2)",64,0,216,22
 109               	.global	timer_selectDivisor
 110               		.type	timer_selectDivisor, @function
 111               	timer_selectDivisor:
 112               		.stabd	46,0,0
   1:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //timerCommon 1.20-1
   2:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #include "timerCommon.h"
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 3


   3:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
   4:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
   5:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if defined(TCCR0)
   6:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define T0_CSReg	TCCR0
   7:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
   8:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //Seems like there'd be no case where TCCR0 AND TCCR0A would both exist, but just in case...
   9:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //Allow multiple-definition (don't use elif) so a warning will be shown...
  10:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if defined(TCCR0B)
  11:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define T0_CSReg	TCCR0B
  12:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
  13:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
  14:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if defined(TCCR1)
  15:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  //Doesn't seem likely, but who knows with other procs...
  16:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define T1_CSReg	TCCR1
  17:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
  18:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
  19:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //This handles the PWM161, as well as others
  20:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if defined(TCCR1B)
  21:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define T1_CSReg	TCCR1B
  22:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
  23:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
  24:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if defined(TCCR2)
  25:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define T2_CSReg	TCCR2
  26:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
  27:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if defined(TCCR2B)
  28:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define T2_CSReg	TCCR2B
  29:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
  30:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
  31:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if defined(TCCR3)
  32:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  //Also doesn't seem likely, but who knows...
  33:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define T3_CSReg	TCCR3
  34:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
  35:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if defined(TCCR3B)
  36:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define T3_CSReg	TCCR3B
  37:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
  38:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
  39:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if defined(T3_CSReg) && !defined(CSOBS)
  40:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #warning "Timer3 on this device is not necessarily properly implemented!"
  41:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
  42:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
  43:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //!!! THESE DO NOTTTT Correspond to the values in TinyX61...
  44:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //    (well, DIV1 does...)
  45:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //Internal use only... Actual value to be written to the _CSReg
  46:_commonCode_localized/timerCommon/1.22/timerCommon.c **** // DIV1 does correspond to PWM161
  47:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #define CSTYP_DIV1		0x01
  48:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
  49:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
  50:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #define CSTYP_DIV8		0x02
  51:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #define CSTYP_DIV64		0x03
  52:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #define CSTYP_DIV256	0x04
  53:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #define CSTYP_DIV1024	0x05
  54:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //Internal use only... Actual value to be written to the _CSReg
  55:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if defined(CSALT)
  56:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define CSALT_DIV1		0x01
  57:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define CSALT_DIV8		0x02
  58:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define CSALT_DIV32	0x03
  59:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define CSALT_DIV64	0x04
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 4


  60:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define CSALT_DIV128	0x05
  61:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define CSALT_DIV256	0x06
  62:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define CSALT_DIV1024	0x07
  63:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
  64:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //Internal use only... Actual value to be written to the _CSReg
  65:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //These values are extensions of CSTYP...
  66:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if defined(CSOBS)
  67:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define CSOBS_DIV16	0x06
  68:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #define CSOBS_DIV32	0x07
  69:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
  70:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
  71:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //All Clock Select bits appear to be located in the first three bits
  72:_commonCode_localized/timerCommon/1.22/timerCommon.c **** // Even the pwm161!
  73:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #define CSMASK			0x07
  74:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
  75:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //Roughly equivalent to the ol' Init_timerX(clkDiv, wgm)
  76:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //Return 0 if no error...
  77:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if (!defined(TIMER_INIT_UNUSED) || !TIMER_INIT_UNUSED)
  78:_commonCode_localized/timerCommon/1.22/timerCommon.c **** uint8_t timer_init(uint8_t timerNum, uint8_t clockDiv, uint8_t wgm)
  79:_commonCode_localized/timerCommon/1.22/timerCommon.c **** {
  80:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//set the waveform mode
  81:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	ERR_HANDLE_NUM(1,				\
  82:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		timer_setWGM(timerNum, wgm)	);
  83:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
  84:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//select the clock
  85:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	ERR_HANDLE_NUM(2,							\
  86:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		timer_selectDivisor(timerNum, clockDiv)	);
  87:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		
  88:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	return 0;
  89:_commonCode_localized/timerCommon/1.22/timerCommon.c **** }
  90:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
  91:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
  92:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if (!defined(TIMER_SETOUTPUTMODES_UNUSED) || !TIMER_SETOUTPUTMODES_UNUSED)
  93:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //timer_setOutputMode() no longer exists, the output channel is now a mask
  94:_commonCode_localized/timerCommon/1.22/timerCommon.c **** uint8_t timer_setOutputModes(uint8_t timerNum, uint8_t outputChannels, \
  95:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 										uint8_t outputMode)
  96:_commonCode_localized/timerCommon/1.22/timerCommon.c **** {
  97:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	uint8_t channelNums;
  98:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
  99:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//This is not be-all-end-all testing, but helps...
 100:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	if(timerNum >= MAXTIMERS)
 101:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		return 1;
 102:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	if(outputChannels >= 0x0f) //MAXCHANNELSPERTIMER)
 103:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		return 2;
 104:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 105:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//For the sake of our brute-force switch statement...
 106:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//Combine the timer number and channel into a single variable...
 107:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//The high nibble contains the timer number, 
 108:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	// the low contains the channel numbers as a mask (A=0x1,B=0x2,C=0x3...)
 109:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	channelNums = (timerNum<<4) | outputChannels;
 110:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	
 111:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	uint8_t i;
 112:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 113:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//Handle each output in the mask...
 114:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	for(i=1; i<=8; i<<=1)
 115:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	{
 116:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		uint8_t channelNum = channelNums & (0xf0 | i);
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 5


 117:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 118:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		//Don't bother with the switch statement if the for loop is testing
 119:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		// a channel that's not being enabled (in the mask)
 120:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		if((channelNum & 0x0f) == 0)
 121:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			continue;
 122:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 123:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 124:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		switch(channelNum)
 125:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		{	
 126:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			//Timer 0
 127:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		  #if defined(T0_COMReg)
 128:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #if defined(OUT_OC0)
 129:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case OUT_OC0:
 130:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				writeMasked((outputMode<<COM_SHIFT), COM_MASK, T0_COMReg);
 131:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 132:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #endif
 133:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #if defined(OUT_OC0A)
 134:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case OUT_OC0A:
 135:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				writeMasked((outputMode<<COMA_SHIFT), COMA_MASK, T0_COMReg);
 136:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 137:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #endif
 138:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #if defined(OUT_OC0B)
 139:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case OUT_OC0B:
 140:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				writeMasked((outputMode<<COMB_SHIFT), COMB_MASK, T0_COMReg);
 141:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 142:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #endif
 143:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		  #endif
 144:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			//Timer 1
 145:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		  #if defined(T1_COMReg)
 146:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #if defined(OUT_OC1)
 147:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case OUT_OC1:
 148:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				writeMasked((outputMode<<COM_SHIFT), COM_MASK, T1_COMReg);
 149:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 150:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #endif
 151:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #if defined(OUT_OC1A)
 152:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case OUT_OC1A:
 153:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				writeMasked((outputMode<<COMA_SHIFT), COMA_MASK, T1_COMReg);
 154:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 155:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #endif
 156:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #if defined(OUT_OC1B)
 157:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case OUT_OC1B:
 158:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				writeMasked((outputMode<<COMB_SHIFT), COMB_MASK, T1_COMReg);
 159:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 160:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #endif
 161:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			#if defined(OUT_OC1D) //so far only on the Tiny861...
 162:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case OUT_OC1D:
 163:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				writeMasked((outputMode<<COMD_SHIFT), COMD_MASK, T1_COMDReg);
 164:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 165:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			#endif
 166:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		  #endif
 167:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			//Timer 2
 168:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		  #if defined(T2_COMReg)
 169:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #if defined(OUT_OC2)
 170:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case OUT_OC2:
 171:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				writeMasked((outputMode<<COM_SHIFT), COM_MASK, T2_COMReg);
 172:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 173:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #endif
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 6


 174:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #if defined(OUT_OC2A)
 175:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case OUT_OC2A:
 176:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				writeMasked((outputMode<<COMA_SHIFT), COMA_MASK, T2_COMReg);
 177:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 178:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #endif
 179:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #if defined(OUT_OC2B)
 180:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case OUT_OC2B:
 181:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				writeMasked((outputMode<<COMB_SHIFT), COMB_MASK, T2_COMReg);
 182:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 183:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #endif
 184:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		  #endif
 185:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			//Timer 3
 186:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		  #if defined(T3_COMReg)
 187:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #if defined(OUT_OC3)
 188:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case OUT_OC3:
 189:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				writeMasked((outputMode<<COM_SHIFT), COM_MASK, T3_COMReg);
 190:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 191:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #endif
 192:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #if defined(OUT_OC3A)
 193:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case OUT_OC3A:
 194:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				writeMasked((outputMode<<COMA_SHIFT), COMA_MASK, T3_COMReg);
 195:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 196:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #endif
 197:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #if defined(OUT_OC3B)
 198:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case OUT_OC3B:
 199:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				writeMasked((outputMode<<COMB_SHIFT), COMB_MASK, T3_COMReg);
 200:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 201:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		   #endif
 202:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		  #endif
 203:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			//The selected timer and channel combination doesn't exist...
 204:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			default:
 205:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				return 3;
 206:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 207:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		}
 208:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	}
 209:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	return 0;
 210:_commonCode_localized/timerCommon/1.22/timerCommon.c **** }
 211:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
 212:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 213:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //Selecting a clock source is independent of the number of channels... 
 214:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //Returns 0 unless an error occurs...
 215:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if (!defined(TIMER_SELECTDIVISOR_UNUSED) || !TIMER_SELECTDIVISOR_UNUSED)
 216:_commonCode_localized/timerCommon/1.22/timerCommon.c **** uint8_t timer_selectDivisor(uint8_t timerNum, uint8_t clockDiv)
 217:_commonCode_localized/timerCommon/1.22/timerCommon.c **** {
 113               		.stabn	68,0,217,.LM0-.LFBB1
 114               	.LM0:
 115               	.LFBB1:
 116               	/* prologue: function */
 117               	/* frame size = 0 */
 118               	/* stack size = 0 */
 119               	.L__stack_usage = 0
 218:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 219:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #if(defined(__AVR_AT90PWM161__))
 220:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	if((timerNum != 1) || (clockDiv != CLKDIV1))
 120               		.stabn	68,0,220,.LM1-.LFBB1
 121               	.LM1:
 122 0000 8130      		cpi r24,lo8(1)
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 7


 123 0002 01F4      		brne .L4
 124               		.stabn	68,0,220,.LM2-.LFBB1
 125               	.LM2:
 126 0004 6111      		cpse r22,__zero_reg__
 127 0006 00C0      		rjmp .L4
 221:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		return 1;
 222:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 223:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	writeMasked(CSTYP_DIV1, CSMASK, T1_CSReg);
 128               		.stabn	68,0,223,.LM3-.LFBB1
 129               	.LM3:
 130 0008 8091 8A00 		lds r24,138
 131 000c 887F      		andi r24,lo8(-8)
 132 000e 8160      		ori r24,lo8(1)
 133 0010 8093 8A00 		sts 138,r24
 224:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	return 0;
 134               		.stabn	68,0,224,.LM4-.LFBB1
 135               	.LM4:
 136 0014 80E0      		ldi r24,0
 137 0016 0895      		ret
 138               	.L4:
 221:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		return 1;
 139               		.stabn	68,0,221,.LM5-.LFBB1
 140               	.LM5:
 141 0018 81E0      		ldi r24,lo8(1)
 225:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//The remaining code should get optimized-out
 226:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	// right, it would... but it's still gotta be looked-at
 227:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	// which isn't possible since a lot of the macros aren't defined.
 228:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #else
 229:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	uint8_t csbits;
 230:_commonCode_localized/timerCommon/1.22/timerCommon.c ****   #if defined(CSOBS)
 231:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	if(timerNum == 0 || timerNum == 1 || timerNum == 3)//IS_CSTYP(timerNum) || IS_CSOBS(timerNum))
 232:_commonCode_localized/timerCommon/1.22/timerCommon.c ****   #else
 233:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	if(IS_CSTYP(timerNum))
 234:_commonCode_localized/timerCommon/1.22/timerCommon.c ****   #endif
 235:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	{
 236:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		switch(clockDiv)
 237:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		{
 238:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case CLKDIV1:
 239:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				csbits = CSTYP_DIV1;	
 240:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 241:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case CLKDIV8:
 242:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				csbits = CSTYP_DIV8;
 243:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 244:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case CLKDIV64:
 245:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				csbits = CSTYP_DIV64;	
 246:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 247:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case CLKDIV256:
 248:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				csbits = CSTYP_DIV256;	
 249:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 250:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case CLKDIV1024:
 251:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				csbits = CSTYP_DIV1024; 
 252:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 253:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			default:
 254:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			  #if defined(CSOBS)
 255:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				if(IS_CSOBS(timerNum))	
 256:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				{
 257:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 					if(clockDiv == CLKDIV16)	
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 8


 258:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 						csbits = CSOBS_DIV16;
 259:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 					else if(clockDiv == CLKDIV32)
 260:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 						csbits = CSOBS_DIV32;
 261:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 					else
 262:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 						return 1;	
 263:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				}
 264:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				else
 265:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 					return 1;
 266:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			  #else
 267:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				return 1;
 268:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			  #endif
 269:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 270:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		}
 271:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	}
 272:_commonCode_localized/timerCommon/1.22/timerCommon.c ****   #if defined(CSALT)
 273:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	else if(IS_CSALT(timerNum)) 
 274:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	{
 275:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		switch(clockDiv)	
 276:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		{
 277:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case CLKDIV1:
 278:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				csbits = CSALT_DIV1;
 279:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 280:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case CLKDIV8:
 281:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				csbits = CSALT_DIV8;
 282:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 283:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case CLKDIV32:
 284:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				csbits = CSALT_DIV32;
 285:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 286:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case CLKDIV64:
 287:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				csbits = CSALT_DIV64;
 288:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 289:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case CLKDIV128:
 290:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				csbits = CSALT_DIV128;
 291:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 292:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case CLKDIV256:
 293:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				csbits = CSALT_DIV256;
 294:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 295:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			case CLKDIV1024:
 296:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				csbits = CSALT_DIV1024;
 297:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 298:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			default:
 299:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				return 1;	
 300:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				break;
 301:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		}
 302:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	}
 303:_commonCode_localized/timerCommon/1.22/timerCommon.c ****   #endif
 304:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	else 
 305:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		return 1;	
 306:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 307:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	switch(timerNum)
 308:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	{
 309:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		//Assume Timer0 and Timer1 exist (see setWGM)
 310:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		case 0:
 311:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writeMasked(csbits, CSMASK, T0_CSReg);
 312:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			break;
 313:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		case 1:
 314:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writeMasked(csbits, CSMASK, T1_CSReg);
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 9


 315:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			break;
 316:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		//From here, only compile for timers that exist as expected...
 317:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		#if defined(T2_CSReg)
 318:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		case 2:
 319:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writeMasked(csbits, CSMASK, T2_CSReg);
 320:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			break;
 321:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		#endif
 322:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		#if defined(T3_CSReg)
 323:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		case 3:
 324:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writeMasked(csbits, CSMASK, T3_CSReg);
 325:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			break;
 326:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		#endif
 327:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		default:
 328:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			return 1;
 329:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			break;
 330:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	}
 331:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	
 332:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	return 0;
 333:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #endif
 334:_commonCode_localized/timerCommon/1.22/timerCommon.c **** }
 142               		.stabn	68,0,334,.LM6-.LFBB1
 143               	.LM6:
 144 001a 0895      		ret
 145               		.size	timer_selectDivisor, .-timer_selectDivisor
 146               	.Lscope1:
 147               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 148               		.stabd	78,0,0
 149               		.stabs	"timer_setWGM:F(7,2)",36,0,343,timer_setWGM
 150               		.stabs	"timerNum:P(7,2)",64,0,343,24
 151               		.stabs	"wgm:P(7,2)",64,0,343,22
 152               	.global	timer_setWGM
 153               		.type	timer_setWGM, @function
 154               	timer_setWGM:
 155               		.stabd	46,0,0
 335:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
 336:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 337:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //Set the Waveform Generation Mode...
 338:_commonCode_localized/timerCommon/1.22/timerCommon.c **** // Four are universal, 6 are almost... 16bit counters are all the same
 339:_commonCode_localized/timerCommon/1.22/timerCommon.c **** // (except the pwm161, right?)
 340:_commonCode_localized/timerCommon/1.22/timerCommon.c **** // For now, just implement the universal ones...
 341:_commonCode_localized/timerCommon/1.22/timerCommon.c **** // Returns 0 if no error
 342:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if(!defined(TIMER_SETWGM_UNUSED) || !TIMER_SETWGM_UNUSED)
 343:_commonCode_localized/timerCommon/1.22/timerCommon.c **** uint8_t timer_setWGM(uint8_t timerNum, uint8_t wgm)
 344:_commonCode_localized/timerCommon/1.22/timerCommon.c **** {
 156               		.stabn	68,0,344,.LM7-.LFBB2
 157               	.LM7:
 158               	.LFBB2:
 159               	/* prologue: function */
 160               	/* frame size = 0 */
 161               	/* stack size = 0 */
 162               	.L__stack_usage = 0
 345:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if(!defined(__AVR_AT90PWM161__))
 346:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	uint8_t wgmLb = getbit(0, wgm);
 347:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	uint8_t wgmHb = getbit(1, wgm);
 348:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif	
 349:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//make the whole byte reflect the bit, so it can be used in writeMasked... 
 350:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//This could probably be more efficient if using writeBit instead...
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 10


 351:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	// Oddly only minor effect to .stab but not to .text or .data after 
 352:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	// other previous changes (below)...
 353:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //	wgmLb *= 0xff;
 354:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //	wgmHb *= 0xff;
 355:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 356:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//Make sure the chosen WGM will be written to the WGM bits properly, as implemented below...
 357:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	// Only modes 0-3 are implemented...
 358:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	if(wgm > 0x03)
 163               		.stabn	68,0,358,.LM8-.LFBB2
 164               	.LM8:
 165 001c 6430      		cpi r22,lo8(4)
 166 001e 00F4      		brsh .L12
 359:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		return 1;
 360:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	
 361:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	switch(timerNum)
 167               		.stabn	68,0,361,.LM9-.LFBB2
 168               	.LM9:
 169 0020 8130      		cpi r24,lo8(1)
 170 0022 01F4      		brne .L12
 362:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	{
 363:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		//Assuming every AVR has a Timer0... 
 364:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		//an error will occur otherwise, and this can be updated accordingly
 365:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		// pwm161 does NOT contain Timer0...
 366:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if(!defined(__AVR_AT90PWM161__))
 367:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		case 0:
 368:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #ifdef _AVR_IOTNx61_H_
 369:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			//TinyX61s' Timer0 is an exception...
 370:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			// It only has WGM00, which serves the same functionality as
 371:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			// most others' WGM01 (when their WGM00 == 0)
 372:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			// (No PWM)
 373:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			if(wgmLb)
 374:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				return 1;
 375:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 376:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			//Whatever .stab is, this single change reduces it by 36Bytes
 377:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writebit(WGM00, T0_WGMReg, wgmHb);
 378:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //			writeMasked(wgmHb, (1<<WGM00), T0_WGMReg);
 379:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #else
 380:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			//This seems to be the "universal" WGM Timer0 settings
 381:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writebit(WGM00, T0_WGMReg, wgmLb);
 382:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writebit(WGM01, T0_WGMReg, wgmHb);
 383:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //			writeMasked(wgmLb, (1<<WGM00), T0_WGMReg);
 384:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //			writeMasked(wgmHb, (1<<WGM01), T0_WGMReg);
 385:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #endif
 386:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			break;
 387:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif //!__AVR_AT90PWM161__
 388:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		//Also Timer1, since all devices I've explored have both T0 and T1...
 389:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		case 1:
 390:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if(defined(__AVR_AT90PWM161__))
 391:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			if(wgm == WGM_NORMAL)
 171               		.stabn	68,0,391,.LM10-.LFBB2
 172               	.LM10:
 173 0024 6111      		cpse r22,__zero_reg__
 174 0026 00C0      		rjmp .L9
 392:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			{
 393:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				clrbit(WGM13, TCCR1B);
 175               		.stabn	68,0,393,.LM11-.LFBB2
 176               	.LM11:
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 11


 177 0028 8091 8A00 		lds r24,138
 178 002c 8F7E      		andi r24,lo8(-17)
 179 002e 00C0      		rjmp .L14
 180               	.L9:
 394:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				return 0;
 395:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			}
 396:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			else if(wgm == WGM_CLR_ON_COMPARE)
 181               		.stabn	68,0,396,.LM12-.LFBB2
 182               	.LM12:
 183 0030 6230      		cpi r22,lo8(2)
 184 0032 01F4      		brne .L12
 397:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			{
 398:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				setbit(WGM13, TCCR1B);
 185               		.stabn	68,0,398,.LM13-.LFBB2
 186               	.LM13:
 187 0034 8091 8A00 		lds r24,138
 188 0038 8061      		ori r24,lo8(16)
 189               	.L14:
 190 003a 8093 8A00 		sts 138,r24
 399:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				return 0;
 191               		.stabn	68,0,399,.LM14-.LFBB2
 192               	.LM14:
 193 003e 80E0      		ldi r24,0
 194 0040 0895      		ret
 195               	.L12:
 359:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	
 196               		.stabn	68,0,359,.LM15-.LFBB2
 197               	.LM15:
 198 0042 81E0      		ldi r24,lo8(1)
 400:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			}
 401:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			else
 402:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				return 1;
 403:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #elif(defined(_AVR_IOTNx61_H_))
 404:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			//TinyX61s' Timer1 is also an exception...
 405:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			// WGM_NORMAL and WGM_CLR_ON_COMPARE are identical...
 406:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			//  comparing to OCR1C
 407:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			//  AND only possible when PWM1x is zero...
 408:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			// AGAIN: ONLY THE "UNIVERSAL" MODES are currently implemented
 409:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			// This has several fancy features.
 410:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 411:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //   Replacing the switch statement below with this didn't save any space
 412:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //     and, frankly, the switch statement is more intuitive
 413:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //			wgmLb=0;
 414:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //			wgmHb=0;
 415:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //			if(wgm == WGM_PHASE_PWM)
 416:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //				wgmLb = 0xff;
 417:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 418:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			switch(wgm)
 419:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			{
 420:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //   Moving this case with default saved 10 text and 4 data bytes!
 421:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //				case WGM_FAST_PWM:
 422:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //					wgmLb = 0;
 423:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //					wgmHb = 0;
 424:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //					break;
 425:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				case WGM_PHASE_PWM:
 426:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 					wgmLb = 1; //0xff;
 427:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 					wgmHb = 0;
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 12


 428:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 					break;
 429:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				case WGM_FAST_PWM:
 430:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 					// This one really has bits = 0 0
 431:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				case WGM_NORMAL:
 432:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				case WGM_CLR_ON_COMPARE:
 433:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 					//For these modes, the WGM bits are Don't Cares
 434:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 					// ("Normal" counting is determined by PWM1x = 0)
 435:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 				default:
 436:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 					//default shouldn't happen...
 437:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 					wgmLb = 0;
 438:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 					wgmHb = 0;
 439:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 					break;
 440:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			}
 441:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 442:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			//NOTE: TinyX61s' WGM bits are both in TCCR1D (very unusual)
 443:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writebit(WGM10, TCCR1D, wgmLb);
 444:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writebit(WGM11, TCCR1D, wgmHb);
 445:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //			writeMasked(wgmLb, (1<<WGM10), TCCR1D);
 446:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //			writeMasked(wgmHb, (1<<WGM11), TCCR1D);
 447:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #elif (!defined(WGM10) || !defined(WGM12) || !defined(TCCR1A) \
 448:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		|| !defined(TCCR1B))   //defined(_AVR_IOTNx5_H_)
 449:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #warning "This device's Timer1 doesn't appear to have (normal) WGM modes."
 450:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #warning " Or, at least, I haven't figured out how to implement them yet"
 451:_commonCode_localized/timerCommon/1.22/timerCommon.c ****  #warning " calls to timer_setWGM(1,...) will error"
 452:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			return 1;
 453:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #else
 454:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			//The "Universal" WGM settings for Timer1 are set here...
 455:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writebit(WGM10, TCCR1A, wgmLb);
 456:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writebit(WGM12, TCCR1B, wgmHb);
 457:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //			writeMasked(wgmLb, (1<<WGM10), TCCR1A);
 458:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //			writeMasked(wgmHb, (1<<WGM12), TCCR1B);
 459:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
 460:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			break;
 461:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	  //From here, only compile for timers that exist...
 462:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	  //at least "exist" as expected...
 463:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	  #if defined(T2_WGMReg)
 464:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		case 2:
 465:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writebit(WGM20, T2_WGMReg, wgmLb);
 466:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writebit(WGM21, T2_WGMReg, wgmHb);
 467:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //			writeMasked(wgmLb, (1<<WGM20), T2_WGMReg);
 468:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //			writeMasked(wgmHb, (1<<WGM21), T2_WGMReg);
 469:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			break;
 470:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	  #endif
 471:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	  #if defined(TCCR3A)
 472:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		case 3:
 473:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writebit(WGM30, TCCR3A, wgmLb);
 474:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			writebit(WGM32, TCCR3B, wgmHb);
 475:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //			writeMasked(wgmLb, (1<<WGM30), TCCR3A);
 476:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //			writeMasked(wgmHb, (1<<WGM32), TCCR3B);
 477:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			break;
 478:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	  #endif
 479:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		default:
 480:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			return 1;
 481:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 			break;
 482:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	}
 483:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	
 484:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	return 0;
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 13


 485:_commonCode_localized/timerCommon/1.22/timerCommon.c **** }
 199               		.stabn	68,0,485,.LM16-.LFBB2
 200               	.LM16:
 201 0044 0895      		ret
 202               		.size	timer_setWGM, .-timer_setWGM
 203               	.Lscope2:
 204               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 205               		.stabd	78,0,0
 206               		.stabs	"timer_init:F(7,2)",36,0,78,timer_init
 207               		.stabs	"timerNum:P(7,2)",64,0,78,28
 208               		.stabs	"clockDiv:P(7,2)",64,0,78,29
 209               		.stabs	"wgm:P(7,2)",64,0,78,20
 210               	.global	timer_init
 211               		.type	timer_init, @function
 212               	timer_init:
 213               		.stabd	46,0,0
  79:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//set the waveform mode
 214               		.stabn	68,0,79,.LM17-.LFBB3
 215               	.LM17:
 216               	.LFBB3:
 217 0046 CF93      		push r28
 218 0048 DF93      		push r29
 219               	/* prologue: function */
 220               	/* frame size = 0 */
 221               	/* stack size = 2 */
 222               	.L__stack_usage = 2
 223 004a C82F      		mov r28,r24
 224 004c D62F      		mov r29,r22
 225               	.LBB2:
  81:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		timer_setWGM(timerNum, wgm)	);
 226               		.stabn	68,0,81,.LM18-.LFBB3
 227               	.LM18:
 228 004e 642F      		mov r22,r20
 229 0050 0E94 0000 		call timer_setWGM
 230 0054 8823      		tst r24
 231 0056 01F0      		breq .L16
  81:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		timer_setWGM(timerNum, wgm)	);
 232               		.stabn	68,0,81,.LM19-.LFBB3
 233               	.LM19:
 234 0058 8061      		ori r24,lo8(16)
 235 005a 00C0      		rjmp .L17
 236               	.L16:
 237               	.LBE2:
 238               	.LBB3:
  85:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		timer_selectDivisor(timerNum, clockDiv)	);
 239               		.stabn	68,0,85,.LM20-.LFBB3
 240               	.LM20:
 241 005c 6D2F      		mov r22,r29
 242 005e 8C2F      		mov r24,r28
 243 0060 0E94 0000 		call timer_selectDivisor
 244 0064 8823      		tst r24
 245 0066 01F0      		breq .L18
  85:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		timer_selectDivisor(timerNum, clockDiv)	);
 246               		.stabn	68,0,85,.LM21-.LFBB3
 247               	.LM21:
 248 0068 8062      		ori r24,lo8(32)
 249 006a 00C0      		rjmp .L17
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 14


 250               	.L18:
 251               	.LBE3:
  88:_commonCode_localized/timerCommon/1.22/timerCommon.c **** }
 252               		.stabn	68,0,88,.LM22-.LFBB3
 253               	.LM22:
 254 006c 80E0      		ldi r24,0
 255               	.L17:
 256               	/* epilogue start */
  89:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
 257               		.stabn	68,0,89,.LM23-.LFBB3
 258               	.LM23:
 259 006e DF91      		pop r29
 260 0070 CF91      		pop r28
 261 0072 0895      		ret
 262               		.size	timer_init, .-timer_init
 263               		.stabs	"err_val:r(7,2)",64,0,81,24
 264               		.stabn	192,0,0,.LBB2-.LFBB3
 265               		.stabn	224,0,0,.LBE2-.LFBB3
 266               		.stabs	"err_val:r(7,2)",64,0,85,24
 267               		.stabn	192,0,0,.LBB3-.LFBB3
 268               		.stabn	224,0,0,.LBE3-.LFBB3
 269               	.Lscope3:
 270               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 271               		.stabd	78,0,0
 272               		.stabs	"timer_compareMatchIntSetup:F(7,2)",36,0,497,timer_compareMatchIntSetup
 273               		.stabs	"timerNum:P(7,2)",64,0,497,24
 274               		.stabs	"outputChannel:P(7,2)",64,0,497,22
 275               		.stabs	"enable:P(7,2)",64,0,498,20
 276               	.global	timer_compareMatchIntSetup
 277               		.type	timer_compareMatchIntSetup, @function
 278               	timer_compareMatchIntSetup:
 279               		.stabd	46,0,0
 486:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #endif
 487:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 488:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //timer_intEnable(type) could be created, assuming similarities between OCIEn/OCFn and TOIEn/TOVn a
 489:_commonCode_localized/timerCommon/1.22/timerCommon.c **** // Looks complicated since OCIEA/B for certain timers, and offsets don't seem particularly consiste
 490:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //uint8_t timer_compareMatchIntEnable(uint8_t timerNum, uint8_t outputChannel)
 491:_commonCode_localized/timerCommon/1.22/timerCommon.c **** //!!! This ONLY works with OUT_CHANNEL_A/B
 492:_commonCode_localized/timerCommon/1.22/timerCommon.c **** // Maybe it should be modified for OUT_A | OUT_B as above...?
 493:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if (!defined(TIMER_COMPAREMATCHINTSETUP_UNUSED) \
 494:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		      || !TIMER_COMPAREMATCHINTSETUP_UNUSED)
 495:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 496:_commonCode_localized/timerCommon/1.22/timerCommon.c **** #if(defined(__AVR_AT90PWM161__))
 497:_commonCode_localized/timerCommon/1.22/timerCommon.c **** uint8_t timer_compareMatchIntSetup(uint8_t timerNum, uint8_t outputChannel,
 498:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	  												uint8_t enable)
 499:_commonCode_localized/timerCommon/1.22/timerCommon.c **** {
 280               		.stabn	68,0,499,.LM24-.LFBB4
 281               	.LM24:
 282               	.LFBB4:
 283               	/* prologue: function */
 284               	/* frame size = 0 */
 285               	/* stack size = 0 */
 286               	.L__stack_usage = 0
 500:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	if(timerNum != 1)
 287               		.stabn	68,0,500,.LM25-.LFBB4
 288               	.LM25:
 289 0074 8130      		cpi r24,lo8(1)
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 15


 290 0076 01F4      		brne .L23
 501:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		return 1;
 502:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//outputChannel is ignored...
 503:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	if(enable)
 291               		.stabn	68,0,503,.LM26-.LFBB4
 292               	.LM26:
 293 0078 4423      		tst r20
 294 007a 01F0      		breq .L21
 504:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	{
 505:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		cli();
 295               		.stabn	68,0,505,.LM27-.LFBB4
 296               	.LM27:
 297               	/* #APP */
 298               	 ;  505 "_commonCode_localized/timerCommon/1.22/timerCommon.c" 1
 299 007c F894      		cli
 300               	 ;  0 "" 2
 506:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		enable = 1;
 507:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	}
 508:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 509:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	writebit(ICIE1, TIMSK1, enable);
 301               		.stabn	68,0,509,.LM28-.LFBB4
 302               	.LM28:
 303               	/* #NOAPP */
 304 007e 0D9A      		sbi 0x1,5
 506:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		enable = 1;
 305               		.stabn	68,0,506,.LM29-.LFBB4
 306               	.LM29:
 307 0080 41E0      		ldi r20,lo8(1)
 308               	.L22:
 510:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//Clear the overflow flag...
 511:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	setbit(ICF1, TIFR1);
 309               		.stabn	68,0,511,.LM30-.LFBB4
 310               	.LM30:
 311 0082 159A      		sbi 0x2,5
 512:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
 513:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	if(enable)
 312               		.stabn	68,0,513,.LM31-.LFBB4
 313               	.LM31:
 314 0084 4423      		tst r20
 315 0086 01F0      		breq .L24
 514:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 		sei();
 316               		.stabn	68,0,514,.LM32-.LFBB4
 317               	.LM32:
 318               	/* #APP */
 319               	 ;  514 "_commonCode_localized/timerCommon/1.22/timerCommon.c" 1
 320 0088 7894      		sei
 321               	 ;  0 "" 2
 322               	/* #NOAPP */
 323 008a 00C0      		rjmp .L24
 324               	.L23:
 501:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//outputChannel is ignored...
 325               		.stabn	68,0,501,.LM33-.LFBB4
 326               	.LM33:
 327 008c 81E0      		ldi r24,lo8(1)
 328 008e 0895      		ret
 329               	.L24:
 515:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 16


 516:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	return 0;
 330               		.stabn	68,0,516,.LM34-.LFBB4
 331               	.LM34:
 332 0090 80E0      		ldi r24,0
 333 0092 0895      		ret
 334               	.L21:
 509:_commonCode_localized/timerCommon/1.22/timerCommon.c **** 	//Clear the overflow flag...
 335               		.stabn	68,0,509,.LM35-.LFBB4
 336               	.LM35:
 337 0094 0D98      		cbi 0x1,5
 338 0096 00C0      		rjmp .L22
 339               		.size	timer_compareMatchIntSetup, .-timer_compareMatchIntSetup
 340               	.Lscope4:
 341               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 342               		.stabd	78,0,0
 343               		.stabs	"",100,0,0,.Letext0
 344               	.Letext0:
 345               		.ident	"GCC: (GNU) 4.8.2"
GAS LISTING /var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 timerCommon.c
/var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s:2      *ABS*:0000003e __SP_H__
/var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s:3      *ABS*:0000003d __SP_L__
/var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s:4      *ABS*:0000003f __SREG__
/var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s:5      *ABS*:00000000 __tmp_reg__
/var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s:6      *ABS*:00000001 __zero_reg__
/var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s:111    .text:00000000 timer_selectDivisor
/var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s:154    .text:0000001c timer_setWGM
/var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s:212    .text:00000046 timer_init
/var/folders/yG/yGnXnnFGGj4hKA71DL26EU+++TI/-Tmp-//ccBzp3GJ.s:278    .text:00000074 timer_compareMatchIntSetup

NO UNDEFINED SYMBOLS
