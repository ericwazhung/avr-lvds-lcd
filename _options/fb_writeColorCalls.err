//This file contains consecutive writeColor calls
// in such a way that they'll be optimized not to use pointer-arithmetic,
// nor a for-loop which requires counters, jumps, and tests that take quite
// a bit of overhead

//This file was mostly generated by _tools/createUnrolledLoop.sh
// But had to be hand-modified (and that script probably won't run on your
// system as-is, as it depends on other scripts I have)

#if(FB_WIDTH==(2))
  writeColor(TRUE, *(color+1));
#elif(FB_WIDTH==(3))
  writeColor(TRUE, *(color+2));
#elif(FB_WIDTH==(4))
  writeColor(TRUE, *(color+3));
#elif(FB_WIDTH==(5))
  writeColor(TRUE, *(color+4));
#elif(FB_WIDTH==(6))
  writeColor(TRUE, *(color+5));
#elif(FB_WIDTH==(7))
  writeColor(TRUE, *(color+6));
#elif(FB_WIDTH==(8))
  writeColor(TRUE, *(color+7));
#elif(FB_WIDTH==(9))
  writeColor(TRUE, *(color+8));
#elif(FB_WIDTH==(10))
  writeColor(TRUE, *(color+9));
#elif(FB_WIDTH==(11))
  writeColor(TRUE, *(color+10));
#elif(FB_WIDTH==(12))
  writeColor(TRUE, *(color+11));
#elif(FB_WIDTH==(13))
  writeColor(TRUE, *(color+12));
#elif(FB_WIDTH==(14))
  writeColor(TRUE, *(color+13));
#elif(FB_WIDTH==(15))
  writeColor(TRUE, *(color+14));
#elif(FB_WIDTH==(16))
  writeColor(TRUE, *(color+15));
#elif(FB_WIDTH==(17))
  writeColor(TRUE, *(color+16));
#elif(FB_WIDTH==(18))
  writeColor(TRUE, *(color+17));
#elif(FB_WIDTH==(19))
  writeColor(TRUE, *(color+18));
#elif(FB_WIDTH==(20))
  writeColor(TRUE, *(color+19));
#elif(FB_WIDTH==(21))
  writeColor(TRUE, *(color+20));
#elif(FB_WIDTH==(22))
  writeColor(TRUE, *(color+21));
#elif(FB_WIDTH==(23))
  writeColor(TRUE, *(color+22));
#elif(FB_WIDTH==(24))
  writeColor(TRUE, *(color+23));
#elif(FB_WIDTH==(25))
  writeColor(TRUE, *(color+24));
#elif(FB_WIDTH==(26))
  writeColor(TRUE, *(color+25));
#elif(FB_WIDTH==(27))
  writeColor(TRUE, *(color+26));
#elif(FB_WIDTH==(28))
  writeColor(TRUE, *(color+27));
#elif(FB_WIDTH==(29))
  writeColor(TRUE, *(color+28));
#elif(FB_WIDTH==(30))
  writeColor(TRUE, *(color+29));
#elif(FB_WIDTH==(31))
  writeColor(TRUE, *(color+30));
#elif(FB_WIDTH==(32))
  writeColor(TRUE, *(color+31));
#elif(FB_WIDTH==(33))
  writeColor(TRUE, *(color+32));
#elif(FB_WIDTH==(34))
  writeColor(TRUE, *(color+33));
#elif(FB_WIDTH==(35))
  writeColor(TRUE, *(color+34));
#elif(FB_WIDTH==(36))
  writeColor(TRUE, *(color+35));
#elif(FB_WIDTH==(37))
  writeColor(TRUE, *(color+36));
#elif(FB_WIDTH==(38))
  writeColor(TRUE, *(color+37));
#elif(FB_WIDTH==(39))
  writeColor(TRUE, *(color+38));
#elif(FB_WIDTH==(40))
  writeColor(TRUE, *(color+39));
#elif(FB_WIDTH==(41))
  writeColor(TRUE, *(color+40));
#elif(FB_WIDTH==(42))
  writeColor(TRUE, *(color+41));
#elif(FB_WIDTH==(43))
  writeColor(TRUE, *(color+42));
#elif(FB_WIDTH==(44))
  writeColor(TRUE, *(color+43));
#elif(FB_WIDTH==(45))
  writeColor(TRUE, *(color+44));
#elif(FB_WIDTH==(46))
  writeColor(TRUE, *(color+45));
#elif(FB_WIDTH==(47))
  writeColor(TRUE, *(color+46));
#elif(FB_WIDTH==(48))
  writeColor(TRUE, *(color+47));
#elif(FB_WIDTH==(49))
  writeColor(TRUE, *(color+48));
#elif(FB_WIDTH==(50))
  writeColor(TRUE, *(color+49));
#elif(FB_WIDTH==(51))
  writeColor(TRUE, *(color+50));
#elif(FB_WIDTH==(52))
  writeColor(TRUE, *(color+51));
#elif(FB_WIDTH==(53))
  writeColor(TRUE, *(color+52));
#elif(FB_WIDTH==(54))
  writeColor(TRUE, *(color+53));
#elif(FB_WIDTH==(55))
  writeColor(TRUE, *(color+54));
#elif(FB_WIDTH==(56))
  writeColor(TRUE, *(color+55));
#elif(FB_WIDTH==(57))
  writeColor(TRUE, *(color+56));
#elif(FB_WIDTH==(58))
  writeColor(TRUE, *(color+57));
#elif(FB_WIDTH==(59))
  writeColor(TRUE, *(color+58));
#elif(FB_WIDTH==(60))
  writeColor(TRUE, *(color+59));
#elif(FB_WIDTH==(61))
  writeColor(TRUE, *(color+60));
#elif(FB_WIDTH==(62))
  writeColor(TRUE, *(color+61));
#elif(FB_WIDTH==(63))
  writeColor(TRUE, *(color+62));
#elif(FB_WIDTH==(64))
  writeColor(TRUE, *(color+63));
#else
 #error "FB_WIDTH is too large for fb_writeColorCalls.c"
#endif
